using MongoDB.Driver;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;

[ApiController]
[Route("api/[controller]")]
public class VulnerabilityController : ControllerBase
{
    private readonly ZapScannerService _zapService;

    public VulnerabilityController(ZapScannerService zapService)
    {
        _zapService = zapService;
    }
	
    [HttpPost("scan")]
    public async Task<IActionResult> TriggerScan([FromBody] string targetUrl)
    {
	    await _zapService.StartScanAsync(targetUrl);
	    var alerts = await _zapService.GetAndLogAlertsAsync(targetUrl);
	    return Ok(alerts);
    }
	
    [HttpGet("cves")]
    public async Task<IActionResult> GetCves([FromQuery] string keyword)
    {
	    var results = await _zapService.GetAndLogCvesAsync(keyword);
	    return Ok(results);
    }
    
    [HttpGet("history/zap")]
    public Task<IActionResult> GetZapHistory([FromServices] MongoLogService m)
	    => Task.FromResult<IActionResult>(Ok(m.ZapScanLogs.Find(_ => true).SortByDescending(z => z.Timestamp).ToList()));

    [HttpGet("history/cve")]
    public Task<IActionResult> GetCveHistory([FromServices] MongoLogService m)
	    => Task.FromResult<IActionResult>(Ok(m.CveScanLogs.Find(_ => true).SortByDescending(c => c.Timestamp).ToList()));
}